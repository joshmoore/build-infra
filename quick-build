#!/bin/bash

set -e
set -x

# Requirements: some gradle installation above 3.x

export TMPDIR=${TMPDIR:-"/tmp"} # Needed on travis
maven_args=${maven_args:-install -DskipTests -DskipSphinxTests}
gradle_args=${gradle_args:-publishToMavenLocal -x javadoc -x test}
fork=snoopycrimecop
branch=${branch:-merge_ci}
output=$1
exec 4>${output}

temp=$(mktemp -d)
if    ls -1qA "${temp}" | grep -q .
then
    echo "${temp}" is not empty
    exit 2
fi

cleanup() {
    rm -rf "${temp}"
}

trap cleanup EXIT

for repo in bio-formats-build omero-build;
do
    cd "${temp}"
    echo "Downloading ${fork}'s ${repo}@${branch} in ${temp}"
    git clone -b "${branch}" "git://github.com/${fork}/${repo}" "$repo"
    cd "${repo}"
    git submodule update --init

    if [ -f "pom.xml" ]; then
        time mvn ${maven_args}
    else
        if test -e gradle;
        then
            echo "Using existing gradle wrapper"
        else
            DIR="${PWD}"; (cd "${TMPDIR}"; gradle wrapper --gradle-version=5.2.1; mv .gradle gradle gradlew "${DIR}")
        fi
        time ./gradlew ${gradle_args}
    fi
    git submodule update --init
    foreach-get-version-as-property >&4
done
